// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tickets Ticket[]
  winners Winner[]
  orders  Order[]

  @@map("users")
}

model Raffle {
  id          String   @id @default(cuid())
  title       String
  description String?
  heroImage   String?
  gallery     String[]
  tickets     Int
  sold        Int      @default(0)
  drawDate    DateTime
  packs       Json
  bonuses     String[]
  status      String   @default("draft")
  slug        String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tickets Ticket[]
  winners Winner[]
  orders  Order[]

  @@map("raffles")
}

model Ticket {
  id        String   @id @default(cuid())
  raffleId  String
  userId    String
  quantity  Int
  createdAt DateTime @default(now())

  raffle Raffle @relation(fields: [raffleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  winners Winner[]

  @@map("tickets")
}

model Order {
  id        String      @id @default(cuid())
  folio     String      @unique
  raffleId  String
  userId    String
  tickets   Int[]
  total     Float
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  expiresAt DateTime

  raffle Raffle @relation(fields: [raffleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@map("orders")
}

model Winner {
  id        String   @id @default(cuid())
  raffleId  String
  userId    String
  ticketId  String
  createdAt DateTime @default(now())

  raffle Raffle @relation(fields: [raffleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  ticket Ticket @relation(fields: [ticketId], references: [id])

  @@map("winners")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admin_users")
}

model Settings {
  id              String   @id @default(cuid())
  appearance      Json
  contactInfo     Json
  socialLinks     Json
  paymentAccounts Json?
  faqs            Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("settings")
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  EXPIRED
}