generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  tickets   Ticket[]
  winners   Winner[]

  @@map("users")
}

model Raffle {
  id           String   @id @default(cuid())
  title        String
  description  String?
  imageUrl     String?
  price        Float
  totalTickets Int
  sold         Int      @default(0)
  endDate      DateTime
  isActive     Boolean  @default(true)
  status       String   @default("active")
  slug         String?  @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orders       Order[]
  tickets      Ticket[]
  winners      Winner[]

  @@map("raffles")
}

model Ticket {
  id        String   @id @default(cuid())
  raffleId  String
  userId    String
  quantity  Int
  createdAt DateTime @default(now())
  raffle    Raffle   @relation(fields: [raffleId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  winners   Winner[]

  @@map("tickets")
}

model Order {
  id        String      @id @default(cuid())
  folio     String      @unique
  raffleId  String
  userId    String
  tickets   Int[]
  total     Float
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  expiresAt DateTime
  raffle    Raffle      @relation(fields: [raffleId], references: [id])
  user      User        @relation(fields: [userId], references: [id])

  @@map("orders")
}

model Winner {
  id        String   @id @default(cuid())
  raffleId  String
  userId    String
  ticketId  String
  createdAt DateTime @default(now())
  raffle    Raffle   @relation(fields: [raffleId], references: [id])
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map("winners")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admin_users")
}

model Settings {
  id              String   @id @default(cuid())
  siteName        String   @default("Lucky Snap")
  paymentAccounts Json?
  faqs            Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("settings")
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  EXPIRED
}
